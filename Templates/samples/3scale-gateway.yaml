apiVersion: template.openshift.io/v1
kind: Template
metadata:
  annotations:
    description: 3scale's APIcast is an NGINX based API gateway used to integrate your internal and external API services with 3scale's API Management Platform. It supports OpenID connect to integrate with external Identity Providers such as Red Hat Single Sign On, for API traffic authentication
    iconClass: icon-3scale
    openshift.io/display-name: 3scale APIcast API Gateway
    openshift.io/documentation-url: https://access.redhat.com/documentation/en-us/red_hat_3scale/2.saas/html/deployment_options/apicast-openshift
    openshift.io/provider-display-name: Red Hat, Inc.
    samples.operator.openshift.io/version: 4.6.15
    tags: api,gateway,3scale
  creationTimestamp: "2021-03-09T01:12:07Z"
  labels:
    samples.operator.openshift.io/managed: "true"
  managedFields:
  - apiVersion: template.openshift.io/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:description: {}
          f:iconClass: {}
          f:openshift.io/display-name: {}
          f:openshift.io/documentation-url: {}
          f:openshift.io/provider-display-name: {}
          f:samples.operator.openshift.io/version: {}
          f:tags: {}
        f:labels:
          .: {}
          f:samples.operator.openshift.io/managed: {}
      f:objects: {}
      f:parameters: {}
    manager: cluster-samples-operator
    operation: Update
    time: "2021-03-09T01:12:07Z"
  name: 3scale-gateway
  namespace: openshift
  resourceVersion: "21474"
  selfLink: /apis/template.openshift.io/v1/namespaces/openshift/templates/3scale-gateway
  uid: d3381323-7553-437d-9500-90730c9cf6e1
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: ${APICAST_NAME}
  spec:
    replicas: 1
    selector:
      deploymentconfig: ${APICAST_NAME}
    strategy:
      type: Rolling
    template:
      metadata:
        annotations:
          prometheus.io/port: "9421"
          prometheus.io/scrape: "true"
        labels:
          deploymentconfig: ${APICAST_NAME}
      spec:
        containers:
        - env:
          - name: THREESCALE_PORTAL_ENDPOINT
            valueFrom:
              secretKeyRef:
                key: password
                name: apicast-configuration-url-secret
          - name: THREESCALE_CONFIG_FILE
            value: ${CONFIGURATION_FILE_PATH}
          - name: THREESCALE_DEPLOYMENT_ENV
            value: ${DEPLOYMENT_ENVIRONMENT}
          - name: RESOLVER
            value: ${RESOLVER}
          - name: APICAST_SERVICES_LIST
            value: ${SERVICES_LIST}
          - name: APICAST_CONFIGURATION_LOADER
            value: ${CONFIGURATION_LOADER}
          - name: APICAST_LOG_LEVEL
            value: ${LOG_LEVEL}
          - name: APICAST_PATH_ROUTING
            value: ${PATH_ROUTING}
          - name: APICAST_RESPONSE_CODES
            value: ${RESPONSE_CODES}
          - name: APICAST_CONFIGURATION_CACHE
            value: ${CONFIGURATION_CACHE}
          - name: REDIS_URL
            value: ${REDIS_URL}
          - name: APICAST_MANAGEMENT_API
            value: ${MANAGEMENT_API}
          - name: OPENSSL_VERIFY
            value: ${OPENSSL_VERIFY}
          image: ${AMP_APICAST_IMAGE}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /status/live
              port: management
            initialDelaySeconds: 10
            timeoutSeconds: 1
          name: ${APICAST_NAME}
          ports:
          - containerPort: 8080
            name: proxy
            protocol: TCP
          - containerPort: 8090
            name: management
            protocol: TCP
          - containerPort: 9421
            name: metrics
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /status/ready
              port: management
            initialDelaySeconds: 15
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 128Mi
            requests:
              cpu: 500m
              memory: 64Mi
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APICAST_NAME}
        from:
          kind: ImageStreamTag
          name: apicast-gateway:latest
          namespace: openshift
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    name: ${APICAST_NAME}
  spec:
    ports:
    - name: proxy
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: management
      port: 8090
      protocol: TCP
      targetPort: 8090
    selector:
      deploymentconfig: ${APICAST_NAME}
- apiVersion: v1
  kind: Secret
  metadata:
    name: apicast-configuration-url-secret
  stringData:
    password: https://${ACCESS_TOKEN}@${DOMAIN}-admin.3scale.net
  type: Opaque
parameters:
- description: AMP release tag.
  name: AMP_RELEASE
  required: true
  value: 2.9.0
- description: Access Token (not a Service Token) for the 3scale Account Management API
  name: ACCESS_TOKEN
  required: true
- description: 'The domain found on the URL of your 3scale Admin Portal: https://<domain>-admin.3scale.net'
  name: DOMAIN
  required: true
- name: AMP_APICAST_IMAGE
  required: true
  value: amp-apicast:latest
- description: Path to saved JSON file with configuration for the gateway. Has to be injected to the container image as read only volume.
  name: CONFIGURATION_FILE_PATH
- description: Deployment environment. Can be staging or production.
  name: DEPLOYMENT_ENVIRONMENT
  required: true
  value: production
- description: Name for the 3scale API Gateway
  name: APICAST_NAME
  required: true
  value: apicast
- description: DNS Resolver for openresty, if empty it will be autodiscovered
  name: RESOLVER
- description: Subset of services to run. Use comma separated list of service ids (eg. 42,1337)
  name: SERVICES_LIST
- description: 'When to load configuration. If on gateway start or incoming request. Allowed values are: lazy, boot.'
  name: CONFIGURATION_LOADER
  value: boot
- description: 'Log level. One of the following: debug, info, notice, warn, error, crit, alert, or emerg.'
  name: LOG_LEVEL
- description: Enable path routing. Experimental feature.
  name: PATH_ROUTING
  value: "false"
- description: Enable logging response codes to 3scale.
  name: RESPONSE_CODES
  value: "false"
- description: For how long to cache the downloaded configuration in seconds. Can be left empty, 0 or greater than 60.
  name: CONFIGURATION_CACHE
- description: 'Redis URL. Required for OAuth2 integration. ex: redis://PASSWORD@127.0.0.1:6379/0'
  name: REDIS_URL
- description: Scope of the Management API. Can be disabled, status or debug. At least status required for health checks.
  name: MANAGEMENT_API
  value: status
- description: Turn on/off the OpenSSL peer verification. Can be set to true/false.
  name: OPENSSL_VERIFY
  required: true
  value: "false"
